{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lihongyu/Documents/Class/FALL_2020/COMP523/Code/Updated_code/herbMap_front/map-app/src/components/map.jsx\";\nimport React, { useState, Component } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport * as plantData from '../data/plants.json';\nimport Data from './data';\n\nrequire('dotenv').config();\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      target_date: Date.parse('01/01/1900'),\n      viewport: {\n        width: \"100vw\",\n        height: \"80vh\",\n        latitude: 37.7577,\n        longitude: -122.4376,\n        zoom: 3\n      },\n      selectedPlant: null\n    };\n\n    this.handleChangeTime = () => {\n      this.setState({\n        target_date: Date.parse('01/01/2019')\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        target_date: Date.parse('01/01/1900')\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.selectedPlant);\n    const {\n      selectedPlant\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactMapGL, { ...this.state.viewport,\n        mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n        onViewportChange: viewport => this.setState({\n          viewport\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleChangeTime,\n        className: \"btn-secondary btn-sm sm-2\",\n        children: \"Change Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn-secondary btn-sm sm-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/lihongyu/Documents/Class/FALL_2020/COMP523/Code/Updated_code/herbMap_front/map-app/src/components/map.jsx"],"names":["React","useState","Component","ReactMapGL","Marker","Popup","plantData","Data","require","config","Map","state","target_date","Date","parse","viewport","width","height","latitude","longitude","zoom","selectedPlant","handleChangeTime","setState","handleReset","render","console","log","process","env","REACT_APP_MAPBOX_TOKEN"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,IAAoBC,MAApB,EAA4BC,KAA5B,QAAwC,cAAxC;AACA,OAAO,KAAKC,SAAZ,MAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBS,KADwB,GAChB;AACJC,MAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAW,YAAX,CADT;AAEJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE,OADD;AAENC,QAAAA,MAAM,EAAE,MAFF;AAGNC,QAAAA,QAAQ,EAAE,OAHJ;AAINC,QAAAA,SAAS,EAAE,CAAC,QAJN;AAKNC,QAAAA,IAAI,EAAE;AALA,OAFN;AASJC,MAAAA,aAAa,EAAE;AATX,KADgB;;AAAA,SAavBC,gBAbuB,GAaJ,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAW,YAAX;AAAf,OAAd;AACH,KAfsB;;AAAA,SAiBvBU,WAjBuB,GAiBT,MAAM;AACjB,WAAKD,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEC,IAAI,CAACC,KAAL,CAAW,YAAX;AAAf,OAAd;AACF,KAnBsB;AAAA;;AAqBxBW,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWU,aAAvB;AACA,UAAM;AAACA,MAAAA;AAAD,QAAkB,KAAKV,KAA7B;AACA,wBACI;AAAA,8BACI,QAAC,UAAD,OACQ,KAAKA,KAAL,CAAWI,QADnB;AAEI,QAAA,oBAAoB,EAAIa,OAAO,CAACC,GAAR,CAAYC,sBAFxC;AAGI,QAAA,gBAAgB,EAAGf,QAAD,IAAc,KAAKQ,QAAL,CAAc;AAACR,UAAAA;AAAD,SAAd;AAHpC;AAAA;AAAA;AAAA;AAAA,cADJ,eAgCI;AAAQ,QAAA,OAAO,EAAI,KAAKO,gBAAxB;AAA0C,QAAA,SAAS,EAAC,2BAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ,eAiCI;AAAQ,QAAA,OAAO,EAAI,KAAKE,WAAxB;AAAqC,QAAA,SAAS,EAAC,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AA7DuB;;AAgE5B,eAAed,GAAf","sourcesContent":["import React, { useState, Component } from 'react';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport * as plantData from '../data/plants.json';\nimport Data from './data';\nrequire('dotenv').config();\n\nclass Map extends Component {\n    state = { \n        target_date: Date.parse('01/01/1900'),\n        viewport: {\n            width: \"100vw\",\n            height: \"80vh\",\n            latitude: 37.7577,\n            longitude: -122.4376,\n            zoom: 3\n          },\n        selectedPlant: null,\n     }\n\n     handleChangeTime = () => {\n         this.setState({ target_date: Date.parse('01/01/2019')})\n     }\n\n     handleReset = () => {\n        this.setState({ target_date: Date.parse('01/01/1900')})\n     }\n\n    render() { \n        console.log(this.state.selectedPlant)\n        const {selectedPlant} = this.state;\n        return (\n            <div>\n                <ReactMapGL\n                    {...this.state.viewport}\n                    mapboxApiAccessToken = {process.env.REACT_APP_MAPBOX_TOKEN}\n                    onViewportChange={(viewport) => this.setState({viewport})}\n                >\n                {/* {plantData.plants.filter(plant=>Date.parse(plant.accessDate)>this.state.target_date).\n                map(plant => (\n                    <Marker key = {plant.occid}\n                            latitude={plant.decimalLatitude}\n                            longitude={plant.decimalLongitude}\n                    >   \n                    <button className=\"btn-primary btn-sm sm-2\"\n                            onClick={()=>{this.setState({selectedPlant: plant})}}>Here</button>\n                    </Marker>\n                ))}\n\n                {selectedPlant && <Popup\n                        latitude={selectedPlant.decimalLatitude}\n                        longitude={selectedPlant.decimalLongitude}\n                        closeButton={true}\n                        closeOnClick={false}\n                        onClose={() => this.setState({selectedPlant: false})}\n                        anchor=\"top\" >\n                            <div>\n                                <h5>occid: {selectedPlant.occid} </h5>\n                                <h5>Catalog Number: {selectedPlant.catalogNumber}</h5>\n                                <h5>{selectedPlant.county}, {selectedPlant.stateProvince}, {selectedPlant.country}</h5>\n                            </div>\n                        </Popup>} */}\n\n                </ReactMapGL>\n                <button onClick = {this.handleChangeTime} className=\"btn-secondary btn-sm sm-2\">Change Time</button>\n                <button onClick = {this.handleReset} className=\"btn-secondary btn-sm sm-2\">Reset</button>\n            </div>\n        )\n    }\n}\n \nexport default Map;"]},"metadata":{},"sourceType":"module"}