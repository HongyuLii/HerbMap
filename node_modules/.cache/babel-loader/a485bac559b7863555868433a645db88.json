{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lihongyu/Documents/Class/FALL_2020/COMP523/Code/herbMap_front/map-app/src/components/map.jsx\";\nimport React, { useState, Component } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport * as plantData from '../data/plants.json';\n\nrequire('dotenv').config();\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      target_date: Date.parse('01/01/1900'),\n      viewport: {\n        width: \"100vw\",\n        height: \"80vh\",\n        latitude: 37.7577,\n        longitude: -122.4376,\n        zoom: 3\n      }\n    };\n\n    this.handleChangeTime = () => {\n      this.setState({\n        target_date: Date.parse('01/01/2019')\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        target_date: Date.parse('01/01/1900')\n      });\n    };\n\n    this.handleDisplay = plant => {\n      /*#__PURE__*/\n      _jsxDEV(Popup, {\n        latitude: plant.decimalLatitude,\n        longitude: plant.decimalLongitude,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this);\n    };\n  }\n\n  render() {\n    const [selectedPlant, setSelectedPlant] = useState(null);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactMapGL, { ...this.state.viewport,\n        mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n        onViewportChange: viewport => this.setState({\n          viewport\n        }),\n        children: [plantData.plants.filter(plant => Date.parse(plant.accessDate) > this.state.target_date).map(plant => /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: plant.decimalLatitude,\n          longitude: plant.decimalLongitude,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary btn-sm sm-2\",\n            onClick: e => {\n              e.preventDefault();\n              setSelectedPlant(plant);\n            },\n            children: \"Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, plant.occid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)), selectedPlant ? /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"plant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleChangeTime,\n        className: \"btn-secondary btn-sm sm-2\",\n        children: \"Change Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn-secondary btn-sm sm-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/lihongyu/Documents/Class/FALL_2020/COMP523/Code/herbMap_front/map-app/src/components/map.jsx"],"names":["React","useState","Component","ReactMapGL","Marker","Popup","plantData","require","config","Map","state","target_date","Date","parse","viewport","width","height","latitude","longitude","zoom","handleChangeTime","setState","handleReset","handleDisplay","plant","decimalLatitude","decimalLongitude","render","selectedPlant","setSelectedPlant","process","env","REACT_APP_MAPBOX_TOKEN","plants","filter","accessDate","map","e","preventDefault","occid"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport * as plantData from '../data/plants.json'\nrequire('dotenv').config();\n\nclass Map extends Component {\n    state = { \n        target_date: Date.parse('01/01/1900'),\n        viewport: {\n            width: \"100vw\",\n            height: \"80vh\",\n            latitude: 37.7577,\n            longitude: -122.4376,\n            zoom: 3\n          },\n     }\n\n     handleChangeTime = () => {\n         this.setState({ target_date: Date.parse('01/01/2019')})\n     }\n\n     handleReset = () => {\n        this.setState({ target_date: Date.parse('01/01/1900')})\n     }\n\n     handleDisplay = (plant) => {\n                        <Popup\n                            latitude={plant.decimalLatitude}\n                            longitude={plant.decimalLongitude}\n                        >\n                        <div>\n                            plant\n                        </div>\n                        </Popup>   \n     }\n\n    render() { \n        const [selectedPlant, setSelectedPlant] = useState(null);\n        return (\n            <div>\n                <ReactMapGL\n                    {...this.state.viewport}\n                    mapboxApiAccessToken = {process.env.REACT_APP_MAPBOX_TOKEN}\n                    onViewportChange={(viewport) => this.setState({viewport})}\n                >   \n                {plantData.plants.filter(plant=>Date.parse(plant.accessDate)>this.state.target_date).\n                map(plant => (\n                    <Marker key = {plant.occid}\n                            latitude={plant.decimalLatitude}\n                            longitude={plant.decimalLongitude}\n                    >   \n                    <button className=\"btn-primary btn-sm sm-2\"\n                            onClick={\n                                e=>{\n                                    e.preventDefault();\n                                    setSelectedPlant(plant);\n                                }}>Here</button>\n                    </Marker>\n                ))}\n\n                {selectedPlant ? (\n                    <Popup>\n                        <div>\n                            plant\n                        </div>\n                    </Popup>\n                ): null}\n\n                </ReactMapGL>\n                <button onClick = {this.handleChangeTime} className=\"btn-secondary btn-sm sm-2\">Change Time</button>\n                <button onClick = {this.handleReset} className=\"btn-secondary btn-sm sm-2\">Reset</button>\n            </div>\n        )\n    }\n}\n \nexport default Map;"]},"metadata":{},"sourceType":"module"}